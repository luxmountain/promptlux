generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  uid          Int      @id @default(autoincrement())
  first_name   String?
  last_name    String?
  username     String   @unique
  email        String   @unique
  created_at   DateTime @default(now())
  bio          String?
  password     String
  avatar_image String?

  followers Follower[] @relation("following")
  following Follower[] @relation("followed")
  posts     Post[]
  comments  Comment[]
  likes     Like[]
  seen      Seen[]
}

model Follower {
  following_user_id Int // Đổi từ String -> Int
  followed_user_id  Int // Đổi từ String -> Int
  created_at        DateTime @default(now())

  following User @relation("following", fields: [following_user_id], references: [uid])
  followed  User @relation("followed", fields: [followed_user_id], references: [uid])

  @@id([following_user_id, followed_user_id])
}

model Like {
  uid        Int // Đổi từ String -> Int
  pid        Int
  created_at DateTime @default(now())

  user User @relation(fields: [uid], references: [uid])
  post Post @relation(fields: [pid], references: [pid])

  @@id([uid, pid])
}

model Seen {
  uid        Int // Đổi từ String -> Int
  pid        Int
  created_at DateTime @default(now())

  user User @relation(fields: [uid], references: [uid])
  post Post @relation(fields: [pid], references: [pid])

  @@id([uid, pid])
}

model Comment {
  cid                   Int       @id @default(autoincrement())
  uid                   Int // Đổi từ String -> Int
  pid                   Int
  created_at            DateTime  @default(now())
  comment               String
  comment_replied_to_id Int? // Nullable
  edited_at             DateTime?

  user User @relation(fields: [uid], references: [uid])
  post Post @relation(fields: [pid], references: [pid])
}

model Post {
  pid         Int       @id @default(autoincrement())
  uid         Int // Đổi từ String -> Int
  created_at  DateTime  @default(now())
  edited_at   DateTime?
  description String
  prompt_used String
  mid         Int
  seen_count  Int       @default(0)
  image_url   String?

  user      User           @relation(fields: [uid], references: [uid])
  model     Model_Category @relation(fields: [mid], references: [mid])
  comments  Comment[]
  likes     Like[]
  seen      Seen[]
  post_tags Post_tags[]
}

model Post_tags {
  pid Int
  tid Int

  post Post @relation(fields: [pid], references: [pid])
  tag  Tags @relation(fields: [tid], references: [tid])

  @@id([pid, tid])
}

model Tags {
  tid         Int         @id @default(autoincrement())
  tag_content String
  post_tags   Post_tags[]
}

model Model_Category {
  mid        Int    @id @default(autoincrement())
  model_name String
  posts      Post[]
}
